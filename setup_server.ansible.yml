---
- name: Setup Server
  hosts: all
  remote_user: root
  become: true
  vars:
    variable_name: variable_value
    service_user_name: final_stockbot

  tasks:
    - name: Install Packages
      ansible.builtin.package:
        name:
          - htop
          - rsync
          - go
          - rust
          - ollama
          - git
          - git-lfs
        state: present
        update_cache: true

    # Grab Dependency for hugot which we use for sentiment analysis
    - name: Check to build tokenizers
      ansible.builtin.stat:
        path: /usr/lib/libtokenizers.a
      register: tokenizers_library_stat
    - name: Install Tokenizers
      when: not tokenizers_library_stat.stat.exists
      block:
        - name: Clone tokenizers repository
          ansible.builtin.git:
            repo: https://github.com/Knights-Analytics/tokenizers
            dest: /root/tokenizers
            version: main
        - name: Build project using cargo
          changed_when: true
          ansible.builtin.command:
            cmd: cargo build --release
            chdir: /root/tokenizers
        - name: Move Output Library
          ansible.builtin.copy:
            remote_src: true
            src: /root/tokenizers/target/release/libtokenizers.a
            dest: /usr/lib/libtokenizers.a
            mode: "0755"


    # Add a user and group
    - name: Add a service user
      ansible.builtin.user:
        name: "{{ service_user_name }}"
        state: present
        system: true
        shell: /bin/false
        home: "/var/lib/{{ service_user_name }}"

    - name: Clone my stockbot repository
      git:
        repo: https://github.com/HSchmale16/the_final_stockbot
        dest: /root/the_final_stockbot
        version: master
      register: stockbot_git
      notify:
        - Build my application

    # - name: Sync the stockbot repository
    #   ansible.builtin.copy:
    #     src: "{{ item }}"
    #     dest: "/root/the_final_stockbot/{{ item | basename }}"
    #     mode: "0644"
    #   loop: "{{ query('fileglob', '*go*') }}"
    #   notify:
    #     - Build my application

    # Create the service
    - name: Create a systemd unit file
      ansible.builtin.template:
        src: final-stockbot.service.j2
        dest: /etc/systemd/system/final-stockbot.service
        mode: "0644"
      notify:
        - Reload systemd

    - name: Ensure Ollama Service is Started
      ansible.builtin.systemd:
        name: ollama
        enabled: true
        state: started

    - name: Pull Ollama Models Required For Work
      changed_when: false
      ansible.builtin.command:
        cmd: "ollama pull gemma:2b"


  ##### Handlers #####
  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true
        name: final-stockbot
        state: restarted
    - name: Build my application
      ansible.builtin.include_tasks:
        file: build-application.ansible.yml
